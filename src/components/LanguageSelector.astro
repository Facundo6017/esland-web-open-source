---
import i18nConfig from "@/i18n"
import { getPathByLocale } from "astro:i18n"
import SpainFlag from "@/components/flags/Spain.astro"
import AndorraFlag from "@/components/flags/Andorra.astro"
import ChevronIcon from "@/components/icons/Chevron.astro"
import Link from "./Link.astro"

const { currentLocale = "es", url } = Astro

const pathname = url.pathname

const hasPrefix = i18nConfig.routing.prefixDefaultLocale || currentLocale !== i18nConfig.defaultLocale;

const path = hasPrefix ? pathname.substring(getPathByLocale(currentLocale).length + 2) : pathname;

const LOCALES: Record<
  string,
  { code: string; name: string; flag: typeof SpainFlag }
> = {
  ca: {
    code: "ca",
    name: "Català",
    flag: AndorraFlag,
  },
  es: {
    code: "es",
    name: "Español",
    flag: SpainFlag,
  },
}

const currentLocaleData = LOCALES[currentLocale]
const otherLocales = Object.values(LOCALES).filter(
  (locale) => locale.code !== currentLocale
)
---

<div class="relative inline-block text-left">
  <div
    class="group text-white rounded-md text-xs font-semibold bg-black/30 hover:bg-black/70 transition-all"
  >
    <button
      type="button"
      class="inline-flex justify-start items-center w-full gap-x-2 px-3 py-2"
      aria-expanded="true"
      aria-haspopup="true"
    >
      <currentLocaleData.flag />
      {currentLocaleData.name}
      <ChevronIcon />
    </button>
    <ul
      class="group-hover:block group-hover:animate-fade-down group-hover:animate-duration-200 hidden pt-0.5 absolute w-full"
    >
      {
        otherLocales.map((locale) => (
          <li class="">
            <Link
              class="rounded-md bg-black/30 hover:bg-black/70 whitespace-no-wrap inline-flex justify-start items-center w-full gap-x-2 px-3 py-2"
              href={path}
              locale={locale.code}
            >
              <locale.flag />
              {locale.name}
            </Link>
          </li>
        ))
      }
    </ul>
  </div>
</div>
